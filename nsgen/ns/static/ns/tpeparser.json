{
   "comment": "JSON tpeedt Parser",

   "lex": {
      "rules": [
         ["\\s+",   "/* skip whitespace */"],
         ["[a-z][\\w]*", "return 'UCID'"], // un-capitalized id
         ["[A-Z][\\w]*", "return 'CID'"],  // capitalized id
         ["\\,",      "return ','"],
         ["\\.",      "return '.'"],
         ["\\(",    "return '('"],
         ["\\)",    "return ')'"],
         ["$",      "return 'EOF'"]
      ]
   },

   "bnf": {
      "expressions": [
        ["type EOF",   "return ['PRtype', [$1]]"],
        ["func EOF",   "return ['PRfunc', $1]"],
        ["constr EOF",   "return ['PRconstr', $1]"],
        ["method EOF", "return ['PRmethod', $1]"]
      ],
      "func": [
        ["UCID ( args )", "$$ = [$1, $3]"],
        ["id UCID ( args )", "$$ = [$2, $4, $1]"],
        ["UCID ( )", "$$ = [$1, null]"],
        ["id UCID ( )", "$$ = [$2, null, $1]"]
      ],
      "id": [
        ["UCID", "$$ = $1"],
        ["CID", "$$ = $1"]
      ],
      "constr":[
        ["CID ( )", "$$ = [$1, null]"],
        ["CID ( args )", "$$ = [$1, $3]"]
      ],
      "args": [
        ["a", "$$ = [$1]"],
        ["a , args", "$$ = [$1, $3]"],
        ["a a", "$$ = [$1, $2]"],
        ["a a , args", "$$ = [$1, $2, $4]"]
      ],
      "a": [
        ["id", "$$ = $1"]
      ],
      "type": [
        ["id", "$$ = $1"]
      ],
      "method": [
        ["type . func", "$$ = [$1, $3]"]
      ]
   }
}
